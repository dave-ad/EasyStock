// <auto-generated />
using System;
using EasyStocks.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyStocks.Infrastructure.Migrations.EasyStockMig
{
    [DbContext(typeof(EasyStockAppDbContext))]
    [Migration("20240703160740_migrate")]
    partial class migrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ThriftSchema")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyStocks.Domain.Entities.Broker", b =>
                {
                    b.Property<int>("BrokerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrokerId"));

                    b.Property<int>("BrokerType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCertified")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("DateOfEmployment")
                        .HasColumnType("date");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PositionInOrg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BrokerId");

                    b.ToTable("Broker", "ThriftSchema");
                });

            modelBuilder.Entity("EasyStocks.Domain.Entities.Broker", b =>
                {
                    b.OwnsOne("EasyStocks.Domain.ValueObjects.Address", "BusinessAddress", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("StreetName")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street_Name");

                            b1.Property<string>("StreetNo")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street_Number");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar(6)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.Address", "CompanyAddress", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("StreetName")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street_Name");

                            b1.Property<string>("StreetNo")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street_Number");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar(6)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.Email", "CompanyEmail", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<int>("Hash")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.MobileNo", "CompanyMobileNumber", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<int>("Hash")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<int>("Hash")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.MobileNo", "MobileNumber", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<int>("Hash")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.CAC", "CACRegistrationNumber", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<int>("Hash")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.FullName", "Name", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<string>("First")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Last")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Others")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.OwnsOne("EasyStocks.Domain.ValueObjects.StockBrokerLicense", "StockBrokerLicenseNumber", b1 =>
                        {
                            b1.Property<int>("BrokerId")
                                .HasColumnType("int");

                            b1.Property<int>("Hash")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)");

                            b1.HasKey("BrokerId");

                            b1.ToTable("Broker", "ThriftSchema");

                            b1.WithOwner()
                                .HasForeignKey("BrokerId");
                        });

                    b.Navigation("BusinessAddress");

                    b.Navigation("CACRegistrationNumber");

                    b.Navigation("CompanyAddress");

                    b.Navigation("CompanyEmail");

                    b.Navigation("CompanyMobileNumber");

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("MobileNumber")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("StockBrokerLicenseNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
